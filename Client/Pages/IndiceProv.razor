@page "/proveedores"
@inject IHttpService http
<h2>Lista de Proveedores</h2>
<br />
<a class="btn btn-primary" href="proveedores/crear">Nuevo</a>
<br />
<br />
<table>
    <tr>
        <th>Codigo</th>
        <th>Nombre</th>
        <th>Empresa</th>
        <th>Telefono</th>
        <th>Descripcion</th>
    </tr>
    @if (proveedores == null)
    {
        <tr>Cargando...</tr>
    }
    else if (proveedores.Count == 0)
    {
        <tr>NO existen proveedores</tr>
    }
    else
    {
        @foreach (var item in proveedores)
        {
            <tr>
                <td>@item.Id</td>
                <td>@item.NombreProvedor</td>
                <td>@item.Empresa</td>
                <td>@item.Telefono</td>
                <td>@item.Descripcion</td>
                <td><a class=" button button2" 
                       href="/proveedor/editar/@item.Id">
                    Editar                    
                    </a><button class="button button3" @onclick="()=>Eliminar(item)">Eliminar</button>
                </td>                
            </tr>
        }
    }
</table>
<Confirmacion @ref="confirmacion"
              onConfirm="ConfirmDel"
              onCancel="Cancelar"
              Titulo="Borrar"
              textCancelar="Salir"
              textOk="Aceptar"
              >
    <div>Desea eliminar el proveedor @eliminarProv.NombreProvedor?</div>

</Confirmacion>

@code {
    List<WebApi.Shared.Data.Entity.Proveedor> proveedores;
    Confirmacion confirmacion;
    WebApi.Shared.Data.Entity.Proveedor eliminarProv;


    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();
        await Leer();
    }

    private async Task Leer()
    {
        var respHttp = await http.Get<List<WebApi.Shared.Data.Entity.Proveedor>>("api/Proveedorees");
        if (!respHttp.Error)
        {
            proveedores = respHttp.Respuesta;

        }
    }

    private void Eliminar(WebApi.Shared.Data.Entity.Proveedor provEliminar)
    {
        confirmacion.Mostrar();
        eliminarProv = provEliminar;
    }

    private async Task ConfirmDel()
    {
        var resp = await http.Delete($"api/Proveedorees/{eliminarProv.Id}");
        if (resp.Error)
        {
            var body = await resp.GetBody();
        }
        Cancelar();
        await Leer();
    }

    private void Cancelar()
    {
        confirmacion.Ocultar();
        eliminarProv = null;


    }


}
<head>
    <style>
        .button {
            border: none;
            color: white;
            padding: 6px 10px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            margin: 4px 2px;
            cursor: pointer;
        }

        .button1 {
            background-color: white;
            color: black;
            border: 2px solid #4CAF50;
        }

            .button1:hover {
                background-color: #4CAF50;
                color: white;
            }
        /* Green */
        .button2 {
            background-color: white;
            color: black;
            border: 2px solid #008CBA;
        }

            .button2:hover {
                background-color: #008CBA;
                color: white;
            }
        /* Blue */
        .button3 {
            background-color: white;
            color: black;
            border: 2px solid #ff0000;
        }

            .button3:hover {
                background-color: #ff0000;
                color: white;
            }
        /*Red*/
        .button4 {
            background-color: white;
            color: black;
            border: 2px solid #ff6a00;
        }

            .button4:hover {
                background-color: #ff6a00;
                color: white;
            }
        /*orange*/
    </style>
</head>
<head>
    <style>
        table {
            font-family: arial, sans-serif;
            border-collapse: collapse;
            width: 100%;
        }

        td, th {
            border: 1px solid #dddddd;
            text-align: left;
            padding: 8px;
        }

        tr:nth-child(even) {
            background-color: #dddddd;
        }
        
    </style>
</head>